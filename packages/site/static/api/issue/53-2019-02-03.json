{
  "id": "MDk6TWlsZXN0b25lNDAwNTM5Mw==",
  "number": 53,
  "url": "https://github.com/AndroidDagashi/AndroidDagashi/milestone/53",
  "title": "53 2019-02-03",
  "description": "DroidKaigi2019のアプリがリリース、サンタトラッカーのソースコードが公開、リフレクションベースのDagger2、など",
  "closedAt": "2019-02-03T10:11:07Z",
  "issues": {
    "totalCount": 11,
    "pageInfo": {
      "startCursor": "Y3Vyc29yOnYyOpLPgAAAAAAABEvOGDQDQw==",
      "endCursor": "Y3Vyc29yOnYyOpLPgAAAAAAAAGPOGBWMLQ==",
      "hasPreviousPage": false,
      "hasNextPage": false
    },
    "nodes": [
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/652",
        "title": "Fuchsiaは未来なのか？",
        "body": "- https://commonsware.com/blog/2019/01/28/fuchsia-future-build-two-throw-away.html\r\n- https://commonsware.com/blog/2019/01/29/fuchsia-future-is-it-soup-yet.html\r\n- https://commonsware.com/blog/2019/01/30/fuchsia-future-tale-two-languages.html\r\n- https://commonsware.com/blog/2019/01/31/fuchsia-future-what-now.html\r\n\r\nThe Commons Blogが全4回にわたってFuchsiaによってAndroidアプリ開発がどういう影響を受けるかについて分析しています。",
        "labels": {
          "nodes": [
            {
              "name": "Flutter",
              "description": "",
              "color": "1591E5"
            },
            {
              "name": "X-Plat",
              "description": "",
              "color": "efd4a0"
            }
          ]
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG2uBAg==",
            "endCursor": "Y3Vyc29yOnYyOpHOG2uBAg==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "第4回にそれぞれの立場からどう捉えるべきかという話が載っていて興味深かったです",
              "publishedAt": "2019-02-03T07:35:48Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/651",
        "title": "DroidKaigi2019のアプリがリリース",
        "body": "<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">DroidKaigi 2019 公式アプリをGoogle Playでリリースしました！<a href=\"https://t.co/x6llHovwYW\">https://t.co/x6llHovwYW</a></p>&mdash; takahirom (@new_runnable) <a href=\"https://twitter.com/new_runnable/status/1091871498451570688?ref_src=twsrc%5Etfw\">February 3, 2019</a></blockquote>\r\n\r\n\r\nhttps://play.google.com/store/apps/details?id=io.github.droidkaigi.confsched2019",
        "labels": {
          "nodes": [
            {
              "name": "DroidKaigi",
              "description": "",
              "color": "FDC137"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/650",
        "title": "Flutterのアーキテクチャ入門",
        "body": "https://medium.com/flutter-community/flutter-app-architecture-101-vanilla-scoped-model-bloc-7eff7b2baf7e\r\n\r\n何も使わない場合、ScopedModel、BLoCパターンについてまとめてあります",
        "labels": {
          "nodes": [
            {
              "name": "Flutter",
              "description": "",
              "color": "1591E5"
            },
            {
              "name": "X-Plat",
              "description": "",
              "color": "efd4a0"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/649",
        "title": "PWAをPlay Storeに公開する準備（？）が整った",
        "body": "https://medium.com/@firt/google-play-store-now-open-for-progressive-web-apps-ec6f3c6ff3cc\r\n\r\nタイトルだけ見ると「PWAをそのままストアに公開できるのか」と思いますが、内容としてはTWA(Trusted Web Activity)を最新版のChromeがサポートするので、そのうちストアで公開できるようになるかもね、ということのようです",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 2,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG2UQRw==",
            "endCursor": "Y3Vyc29yOnYyOpHOG2uHSw==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "どうやら、いままでも、WebViewだけのActivityをつくってアプリとしてリリースすることは可能だったのですが、TWAを使うことでWebViewを使わなくてもよくなったということのようです",
              "publishedAt": "2019-02-01T05:10:42Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            },
            {
              "body": "スマホの黎明期によく見かけたWebViewだけのなんちゃってアプリを思い出してしまいますが、Webでできることも増えているので良さそうですね",
              "publishedAt": "2019-02-03T08:09:56Z",
              "author": {
                "login": "yshrsmz",
                "url": "https://github.com/yshrsmz",
                "avatarUrl": "https://avatars.githubusercontent.com/u/654889?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/647",
        "title": "リフレクションベースのDagger2",
        "body": "https://github.com/JakeWharton/dagger-reflect\r\nhttps://www.reddit.com/r/androiddev/comments/alpkwf/dagger_reflect_a_reflectionbased_implementation",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG2t8vA==",
            "endCursor": "Y3Vyc29yOnYyOpHOG2t8vA==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "開発時はreflectionを使い、プロダクションではannotation processorをつかうというアプローチはButteKnifeでもありましたね。\r\nhttps://github.com/JakeWharton/butterknife/tree/master/butterknife-reflect",
              "publishedAt": "2019-02-03T07:12:07Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/646",
        "title": "2019/01/30のAndroidxリリース",
        "body": "https://developer.android.com/jetpack/androidx/releases/#january_30_2019\r\nhttps://www.reddit.com/r/androiddev/comments/alpab1/androidx_release_notes_300119_activity_annotation\r\n\r\nステーブルリリースはmediaだけで、ほかはアルファ版です\r\n\r\n",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG2HqMQ==",
            "endCursor": "Y3Vyc29yOnYyOpHOG2HqMQ==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "いろいろありますが、`activity`の`@ContentView`アノテーションがおもしろそうです。\r\nDataBinding使ってたら特に使いみちないかもですが…",
              "publishedAt": "2019-01-31T16:08:30Z",
              "author": {
                "login": "yshrsmz",
                "url": "https://github.com/yshrsmz",
                "avatarUrl": "https://avatars.githubusercontent.com/u/654889?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/645",
        "title": "実機でのデザイン確認をより便利にするアプリWindow",
        "body": "https://medium.com/@wdziemia/a-new-tool-for-vqa-on-android-585e6f45ef40\r\n\r\nVQAってなんの略かと思ったら`Visual Quality Assistance`だそうです。\r\n画面上にオーバーレイでグリッドを表示してくれるアプリはいくつかありますが、特定のViewのサイズや座標を表示してくれるものは今までなかったのではないかと思います。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG2t9OA==",
            "endCursor": "Y3Vyc29yOnYyOpHOG2t9OA==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "よさそうですね。いままで目で数えてました 💦 ",
              "publishedAt": "2019-02-03T07:14:43Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/644",
        "title": "なぜkotlinx.android.syntheticはAOSPで推奨されないのか",
        "body": "https://www.reddit.com/r/androiddev/comments/ala9p2/why_kotlinx_synthetic_is_no_longer_a_recommended/\r\n\r\nAOSPのコミットでkotlinx.android.syntheticをやめているのを見て疑問に思ったようです。Developer Advocateの[コメント](https://www.reddit.com/r/androiddev/comments/ala9p2/why_kotlinx_synthetic_is_no_longer_a_recommended/efdvpkg)も参考にどうぞ。",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/643",
        "title": "サンタトラッカーのソースコードが公開",
        "body": "https://android-developers.googleblog.com/2019/01/google-releases-source-code-of-santa.html\r\n\r\n表面上はそこまで変わってませんがApp BundleとDynamic Featureの利用でapkサイズが8割も減ったそうです",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/642",
        "title": "GradleのincludeGroupでライブラリを取得するレポジトリを指定する",
        "body": "https://jebware.com/blog/?p=573\r\n\r\nGradle 5.1から、ライブラリの取得先レポジトリを細かく指定できるようになったようです。\r\n若干設定が手間ですが、ビルド時間が少しは改善されそうです。\r\n\r\nなお記事内では`includeGroup`のサンプルのみが紹介されていますが、逆の機能を提供する`excludeGroup`というものもあります。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG1XB8w==",
            "endCursor": "Y3Vyc29yOnYyOpHOG1XB8w==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "Kotlin Multiplatform Projectで開発をしているとKotlin/Native関連のpomファイルがsyncのたびにダウンロードされてめちゃくちゃ時間がかかる、という問題がありますが、これもこの機能を利用して抑制することができます\r\n\r\nhttps://youtrack.jetbrains.com/issue/KT-28128\t",
              "publishedAt": "2019-01-29T16:22:36Z",
              "author": {
                "login": "yshrsmz",
                "url": "https://github.com/yshrsmz",
                "avatarUrl": "https://avatars.githubusercontent.com/u/654889?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/641",
        "title": "1つのFragmentで複数のViewModelを持つのは悪いのか",
        "body": "https://www.reddit.com/r/androiddev/comments/akd9ok/is_using_multiple_viewmodels_in_fragment/\r\n\r\nスレッドではViewModelの数は増やすべきでないという意見が多いようです",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOG1H3SQ==",
            "endCursor": "Y3Vyc29yOnYyOpHOG1H3SQ==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "自分の経験では画面内のコンポーネントが互いに連携するのなら、1画面1ViewModelがよいように感じています",
              "publishedAt": "2019-01-29T00:22:53Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      }
    ]
  }
}