{
  "id": "MDk6TWlsZXN0b25lNDUwODExNg==",
  "number": 78,
  "url": "https://github.com/AndroidDagashi/AndroidDagashi/milestone/78",
  "title": "78 2019-07-28",
  "description": "In-App Updateの導入事例, コールバックをKotlin Flowで扱う, Android QのAMA, In-App Reviewの噂, Viewの状態をカプセル化する, など",
  "closedAt": "2019-07-28T10:32:51Z",
  "issues": {
    "totalCount": 10,
    "pageInfo": {
      "startCursor": "Y3Vyc29yOnYyOpLPgAAAAAAAA-fOHDyGhw==",
      "endCursor": "Y3Vyc29yOnYyOpLPgAAAAAAAAGPOHBBdNA==",
      "hasPreviousPage": false,
      "hasNextPage": false
    },
    "nodes": [
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/946",
        "title": "In-App Updateの導入事例",
        "body": "https://medium.com/androiddevelopers/how-pandao-uses-the-in-app-updates-flexible-flow-to-speed-up-the-app-update-process-on-android-5c00632680ed\r\n\r\nPandaoというサービスでのIn-App Updateの導入事例です。\r\n実装方法だけでなく、In-App Update利用後のアップデート率の変化にも触れています",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/945",
        "title": "Viewの状態をカプセル化する",
        "body": "https://ryanharter.com/blog/encapsulating-view-state/\r\n\r\nViewModelから複数のデータを直接`LiveData`で公開するのではなく、ViewModel内でまとめてから公開しよう、という話。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/944",
        "title": "JavaからKotlinへリファクタリングするcodelab",
        "body": "https://codelabs.developers.google.com/codelabs/java-to-kotlin/#0\r\nhttps://medium.com/androiddevelopers/from-java-programming-language-to-kotlin-the-idiomatic-way-ac552dcc1741\r\n\r\n少し前ですが、JavaからKotlinにリファクタリングするcodelabがGoogleから公開されました",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/943",
        "title": "どうやったらアプリを完成させられる？",
        "body": "https://www.reddit.com/r/androiddev/comments/cih0f7/advice_on_actually_finishing_an_app/\r\n\r\n80%くらいまで作ると飽きてしまう、というスレ主へのアドバイス。\r\n個人でやっているとあるあるな問題です。",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/942",
        "title": "Android QのジェスチャーナビゲーションとPhilips Hueアプリ",
        "body": "https://jeroenmols.com/blog/2019/07/17/androidqgestures/\r\nhttps://www.reddit.com/r/androiddev/comments/cgvvn8/supporting_android_q_gestural_navigation_in/\r\n\r\n照明管理用のスライダーがたくさんあるPhilips Hueのアプリで、Android Qのジェスチャーナビゲーションにどうやって対応したか、という話です",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/941",
        "title": "KotlinのCollectionとSequence",
        "body": "https://medium.com/androiddevelopers/collections-and-sequences-in-kotlin-55db18283aca\r\n\r\ngifアニメもあって違いがわかりやすいです",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/940",
        "title": "Play Storeがin-app reviewを準備中との噂",
        "body": "https://www.reddit.com/r/Android/comments/chq8sz/google_play_store_prepares_to_add_inapp_reviews/\r\nまだ噂ですが、アプリ内からPlay Store上のレビューを投稿できるようにする仕組みが準備されているとのことです。",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/939",
        "title": "Android QのAMA",
        "body": "AndroidエンジニアリングチームによるAndroid QについてのAMAが日本時間で8/2 04:00 AMに行われるそうです。\r\nhttps://www.reddit.com/r/androiddev/comments/ci4tdq/were_on_the_engineering_team_for_android_q_ask_us/",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/938",
        "title": "Kotlin FlowのRxJavaからのマイグレーション用メソッド",
        "body": "Kotlin FlowにはRxJavaからのマイグレーション用のAPIが用意されているようです\r\n\r\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Spent an hour trying out Flow today. Super impressed that the <a href=\"https://twitter.com/kotlin?ref_src=twsrc%5Etfw\">@kotlin</a> team have added `<a href=\"https://twitter.com/deprecated?ref_src=twsrc%5Etfw\">@Deprecated</a>` stub extension funs for Flow, to allow easy migration from RxJava operators to Flow equivalents 🤯<br><br>Source: 👇<a href=\"https://t.co/ZvkvDPekoR\">https://t.co/ZvkvDPekoR</a> <a href=\"https://t.co/PlI1u9MlGv\">pic.twitter.com/PlI1u9MlGv</a></p>&mdash; Chris Banes (@chrisbanes) <a href=\"https://twitter.com/chrisbanes/status/1153918684856901633?ref_src=twsrc%5Etfw\">July 24, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOHquolQ==",
            "endCursor": "Y3Vyc29yOnYyOpHOHquolQ==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "単に同名の `@Deprecated` のメソッドを生やしただけといえばそうですが、サードパーティライブラリのRxJavaからの移行を促す機能を標準ライブラリに持たせるのはやり過ぎに映ります",
              "publishedAt": "2019-07-24T09:57:49Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/937",
        "title": "コールバックをKotlin Flowで扱う",
        "body": "https://medium.com/@elizarov/callbacks-and-kotlin-flows-2b53aa2525cf\r\n\r\nコールバックを受け取るAPIをKotlin Flowで扱うやり方について説明されています",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOHpzVyg==",
            "endCursor": "Y3Vyc29yOnYyOpHOHpzVyg==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "最終的にchannelに要素を詰めるので、backpressureの話が登場します。やはりbackpressureの概念は避けようがないようです :-p",
              "publishedAt": "2019-07-21T22:57:43Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      }
    ]
  }
}