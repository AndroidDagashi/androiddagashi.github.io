{
  "id": "MDk6TWlsZXN0b25lMzQxMzQyNQ==",
  "number": 20,
  "url": "https://github.com/AndroidDagashi/AndroidDagashi/milestone/20",
  "title": "20-20180610-20180616",
  "description": "大きなニュースはKotlin 1.2.50のリリースくらいでしょうか",
  "closedAt": "2018-06-17T10:49:39Z",
  "issues": {
    "totalCount": 12,
    "pageInfo": {
      "startCursor": "Y3Vyc29yOnYyOpLPgAAAAAAABK_OE9n2vQ==",
      "endCursor": "Y3Vyc29yOnYyOpLPgAAAAAAAAGPOE8FRGg==",
      "hasPreviousPage": false,
      "hasNextPage": false
    },
    "nodes": [
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/259",
        "title": "JetpackのNavigationでCustom Viewを管理する",
        "body": "https://proandroiddev.com/jetpack-navigation-with-custom-views-c763255c9599\r\n\r\nNavigationが標準でサポートしているのはFragmentとActivityですが、[好きに拡張できるよ](https://developer.android.com/topic/libraries/architecture/navigation/navigation-add-new)、ということでCustom viewの遷移を管理できるようにしてみたようです。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/258",
        "title": "最近のアプリ界隈での「設計」の違和感",
        "body": "http://quesera2.hatenablog.jp/entry/2018/06/14/022504\r\n\r\nいろいろ設計パターンありますが、表面的になぞるだけじゃなくて、それによって何が実現できるか、とか考えた上で採用したいですね。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/257",
        "title": "React Nativeのrearchitecture",
        "body": "https://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018\r\n\r\nハイブリッドアプリをより作りやすくするためのrearchitectureが進んでいるようです。しかし5年間開発して、まだバージョンが0.55というのもすごいですね……。",
        "labels": {
          "nodes": [
            {
              "name": "React Native",
              "description": "",
              "color": "38D9FA"
            },
            {
              "name": "X-Plat",
              "description": "",
              "color": "efd4a0"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/256",
        "title": "Kotlin Developers MeetupでHadi氏が来日するそうです",
        "body": "https://kotlin.connpass.com/event/90679/\r\n\r\nすでに枠が埋まっているのですが、ご参考までに。",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/255",
        "title": "Kotlinのvalプロパティのgetter",
        "body": "<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">そうなんだ... 👀 <br>valなのにgetのたび結果が変わるようなところに違和感がある🤔 <a href=\"https://t.co/xxvwRHZpsb\">https://t.co/xxvwRHZpsb</a></p>&mdash; Yuki312 (@Yuki_312) <a href=\"https://twitter.com/Yuki_312/status/1007635902317846528?ref_src=twsrc%5Etfw\">June 15, 2018</a></blockquote>\r\n\r\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">ちょっと違うかもですが、使い分けで悩むときは、自分はここに書いてることを参考にしていますー！！<a href=\"https://t.co/BR9JRutkju\">https://t.co/BR9JRutkju</a></p>&mdash; ふじたく (@magie_pooh) <a href=\"https://twitter.com/magie_pooh/status/1007739426875691008?ref_src=twsrc%5Etfw\">June 15, 2018</a></blockquote>\r\n\r\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">Kotlin的にはフィールドのvalは不変という意味でなくて単に代入できないという意味になっているみたいですね🤔バイトコード的にはバッキングフィールドを持たず、ただのメソッドになるみたいですね</p>&mdash; takahirom (@new_runnable) <a href=\"https://twitter.com/new_runnable/status/1007639107105796096?ref_src=twsrc%5Etfw\">June 15, 2018</a></blockquote>\r\n\r\nメソッドにするかプロパティにするかという話も合わせて興味深い議論です。",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 2,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOF7W_FQ==",
            "endCursor": "Y3Vyc29yOnYyOpHOF7cIHQ==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "なお、個人的にはread onlyなプロパティに見せかける利点はほぼない気がするのですが、どうなのでしょうか。",
              "publishedAt": "2018-06-16T04:55:27Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            },
            {
              "body": "私は基本メソッドで書いてしまいますね…\r\nあとはふじたくさんの挙げているリンク参考にしています",
              "publishedAt": "2018-06-17T11:04:51Z",
              "author": {
                "login": "yshrsmz",
                "url": "https://github.com/yshrsmz",
                "avatarUrl": "https://avatars.githubusercontent.com/u/654889?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/254",
        "title": "AMDのWindowsマシンでエミュレータが動かせるという話",
        "body": "https://www.reddit.com/r/androiddev/comments/8qhirc/amd_finally_gets_google_emulator_support_canary/\r\n\r\n見逃していましたが、27.3.6から動かせるそうです。\r\nhttps://androidstudio.googleblog.com/2018/06/emulator-2736-canary.html\r\n\r\nなおスレッドはWindowsとLinuxどちらがビルドが速いかという話題で盛り上がっています。",
        "labels": {
          "nodes": [
            {
              "name": "reddit",
              "description": "",
              "color": "d93f0b"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/253",
        "title": "KotlinConf 2018のスピーカーが発表",
        "body": "https://kotlinconf.com/speakers/\r\n\r\nいつもの面子といったところですが、気になる人はぜひ。アーリーバードチケットすべて売り切れてしまったようです。",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/252",
        "title": "Kotlin 1.2.50リリース",
        "body": "https://blog.jetbrains.com/kotlin/2018/06/kotlin-1-2-50-is-out/\r\n\r\nAndroid関連で大きそうなのは下記の通りです。\r\n\r\n- マルチモジュールプロジェクトでのインクリメンタルビルドのパフォーマンス向上\r\n- kaptのパフォーマンス向上\r\n- ~~`gradle.properties`に`kapt.use.worker.api=true`を書くと、kaptをGradleのワーカーで動かしてくれる~~\r\n  - ~~要Gradle 4.3以降~~\r\n  - ~~1.2.60からデフォルトで有効にする予定~~\r\n\r\nまた、コンパイラにProgressiveモードが追加されました。\r\nこれは本来メジャーバージョンでしかリリースされない、後方互換性のない修正や改善をマイナーリリースでも有効にするためのものです。  \r\n基本的に、Kotlinのバージョンアップにキャッチアップしているアクティブな開発者向け機能なようです。  \r\nProgressiveモードはKotlinコンパイラの引数に`-Xprogressive`を追加することでモジュール毎に有効にされます。\r\n本来メジャーバージョンアップで追加されるはずの変更が適用されるので、もちろん既存コードがエラーになることもあります。",
        "labels": {
          "nodes": [
            {
              "name": "Kotlin",
              "description": "",
              "color": "EC953C"
            }
          ]
        },
        "comments": {
          "totalCount": 2,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOF6zmow==",
            "endCursor": "Y3Vyc29yOnYyOpHOF7Xx1A==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "ちなみに、現状マルチモジュールなプロジェクトで`kapt.use.worker.api=true`記述すると下記リンクのエラーでビルドできません。(シングルモジュールなプロジェクトに関しては未検証)\r\n\r\nhttps://youtrack.jetbrains.net/issue/KT-24919\r\n\r\nAGP3.2系でDataBinding使っていると下記のエラーも発生しています\r\nhttps://youtrack.jetbrains.net/issue/KT-24915",
              "publishedAt": "2018-06-14T08:01:07Z",
              "author": {
                "login": "yshrsmz",
                "url": "https://github.com/yshrsmz",
                "avatarUrl": "https://avatars.githubusercontent.com/u/654889?v=4"
              }
            },
            {
              "body": "今確認したら `kapt.use.worker.api` に関する記述消えてますね 🤔 \r\n\r\nなおDataBindingでのエラーは下記対応で回避できそうです\r\nhttps://github.com/googlesamples/android-sunflower/pull/52\r\n\r\n",
              "publishedAt": "2018-06-16T09:18:03Z",
              "author": {
                "login": "yshrsmz",
                "url": "https://github.com/yshrsmz",
                "avatarUrl": "https://avatars.githubusercontent.com/u/654889?v=4"
              }
            }
          ]
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/251",
        "title": "国際化された文字列をスタイリングする方法",
        "body": "https://medium.com/google-developers/styling-internationalized-text-in-android-f99759fb7b8f\r\n\r\nHTMLタグは何度か使いましたが、文字列リソースのカスタムアノテーションは使ったことがありませんでした。カスタムアノテーションと ImageSpan で文字列に画像を入れるのはなるほどという感じです。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/250",
        "title": "non-SDK APIにアクセスしたときの挙動",
        "body": "https://android-developers.googleblog.com/2018/06/an-update-on-non-sdk-restrictions-in.html\r\n\r\n以前から告知されていたことですが、Pからはnon-SDKのAPI（つまり `@hidden` なAPI）にアクセスできなくなります。[グレイリスト](https://android.googlesource.com/platform/frameworks/base/+/85c81cb24c5d71fc79dea3ba498d1a509895bb01/config/hiddenapi-p-light-greylist.txt)に入っているものについては使えますが警告がログに出るとのことです。\r\n\r\nStrictModeであれば、ポリシーで違反時の挙動を変えられるのでテストのときに便利そうです。\r\nhttps://commonsware.com/blog/2018/06/12/strictmode-api-greylist-monitoring.html",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/249",
        "title": "ConstraintLayout 1.1.2",
        "body": "https://androidstudio.googleblog.com/2018/06/constraintlayout-112.html\r\n\r\n1.1.1でパッケージが`androidx.constraintlayout.ConstraintLayout`になっていたのが、このリリースで`androidx.constraintlayout.widget.ConstraintLayout`に修正されています。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 0,
          "pageInfo": {
            "startCursor": null,
            "endCursor": null,
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": []
        }
      },
      {
        "url": "https://github.com/AndroidDagashi/AndroidDagashi/issues/248",
        "title": "FacebookがAndroid/iOSで使えるデバッグツールSonarを発表",
        "body": "https://code.facebook.com/posts/1461914677288302/open-sourcing-sonar-a-new-extensible-debugging-tool/\r\nhttps://fbsonar.com\r\nhttps://github.com/facebook/Sonar\r\n\r\nざっくりいうと[Stetho](https://github.com/facebook/stetho)の進化版です。\r\nStethoはChromeのdev toolベースで開発していたため、Androidのデバッグツールとして利用するには制限があったとのこと。Sonarはスタンドアロンなアプリなのでこの制限がなく、たとえばadbを使ったりiOSのデバッグもできるようになったそうです。Stethoと同様にプラグインで拡張可能なので、いろいろできそうです。\r\n\r\nSonarのアプリ自体はElectron製で、プラグインのUIはReactで書くことができます。",
        "labels": {
          "nodes": []
        },
        "comments": {
          "totalCount": 1,
          "pageInfo": {
            "startCursor": "Y3Vyc29yOnYyOpHOF6Y3GA==",
            "endCursor": "Y3Vyc29yOnYyOpHOF6Y3GA==",
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "body": "Publickey でも取り上げられていたのでリンク置いておきます。\r\nhttps://www.publickey1.jp/blog/18/iosandroidsonarfacebook.html",
              "publishedAt": "2018-06-12T23:46:33Z",
              "author": {
                "login": "hkurokawa",
                "url": "https://github.com/hkurokawa",
                "avatarUrl": "https://avatars.githubusercontent.com/u/6446183?v=4"
              }
            }
          ]
        }
      }
    ]
  }
}